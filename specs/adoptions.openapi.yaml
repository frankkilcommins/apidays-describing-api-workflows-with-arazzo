openapi: 3.0.3
info:
  version: 1.0.0
  title: Pets Adoptions API
  description: >
    An API for initiating and completing **Pet Adoptions** across our REST based
    petstore. This OpenAPI definition describes the RESTful APIs offered by the
    store's adoption capability

    Through the RESTful interface consumers can:

    1. Initiate an **adoption request** for a **pet**

    2. Search and review list of **pet adoptions**

    3. Update the **adoption** status for a **pet**

    Other useful information related to this API:
  termsOfService: http://swagger.io/terms/
  contact:
    email: frank.kilcommins@smartbear.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://host.docker.internal:8087 
      
tags:
  - name: adoptions
    description: Initiate and manage pet adoptions across our stores
paths:
  /adoptions:
    get:
      security:
        - PetCoToken:
            - registered
            - admin
      tags:
        - adoptions
      summary: Get a list of current pet adoptions
      description: A list of adoptions with information on their status and pet
      operationId: getAdoptions
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          schema:
            type: string
            description: the adoption status
            enum:
              - requested
              - pending
              - available
              - denied
              - approved
            default: requested
        - name: location
          in: query
          description: the store location of the pet adoption
          required: true
          schema:
            type: string
            example: Galway
      responses:
        '200':
          description: Get Adoptions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdoptionList'
              examples:
                singleAdoption:
                  value:
                    - id: d46b67cb-7976-4b94-af8e-381688c915ad
                      status: requested
                      pets:
                        - c76b67cb-7976-4b94-af8e-381688c915ae
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        default:
          description: Get Adoptions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdoptionList'
    post:
      security:
        - PetCoToken:
            - registered
            - admin
      tags:
        - adoptions
      summary: Add a new adoption
      description: Initiate the request to adopt an available pet
      operationId: postAdoption
      requestBody:
        description: Create a new adoption request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdoption'
            examples:
              AdoptPet:
                value:
                  pets:
                    - c76b67cb-7976-4b94-af8e-381688c915ae
                  location: Galway
        required: true
      responses:
        '201':
          description: Pet Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adoption'
              examples:
                AdoptedPetResponse:
                  value:
                    id: d46b67cb-7976-4b94-af8e-381688c915ad
                    status: requested
                    pets:
                      - c76b67cb-7976-4b94-af8e-381688c915ae
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /adoptions/{id}:
    patch:
      tags:
        - adoptions
      summary: Update the status of an adoption
      description: Use this operation to update the adoption status of an adoption
      operationId: patchAdoptionStatus
      parameters:
        - name: id
          in: path
          description: The identifier for the path
          required: true
          schema:
            type: string
            example: d46b67cb-7976-4b94-af8e-381688c915ad
      requestBody:
        description: the new status information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdoptionStatus'
        required: true
      responses:
        '200':
          description: Pet status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adoption'
              examples:
                ApprovedAdoption:
                  value:
                    id: d46b67cb-7976-4b94-af8e-381688c915ad
                    status: approved
                    pets:
                      - c76b67cb-7976-4b94-af8e-381688c915ae
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  schemas:
    Adoption:
      type: object
      properties:
        id:
          type: string
          description: a _guid_ identifier of the adoption
          example: a76b67cb-7976-4b94-af8e-381688c915ae
        status:
          type: string
          description: the status of the adoption
          example: requested
          enum:
            - requested
            - pending
            - available
            - denied
            - approved
        pets:
          type: array
          items:
            type: string
          example:
            - c76b67cb-7976-4b94-af8e-381688c915ae
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/AdoptionReason'
    AdoptionList:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/Page'
        data:
          type: object
          properties:
            pets:
              type: array
              items:
                $ref: '#/components/schemas/Adoption'
              example:
                - id: a76b67cb-7976-4b94-af8e-381688c915ae
                  status: requested
                  pets:
                    - c76b67cb-7976-4b94-af8e-381688c915ae
        links:
          $ref: '#/components/schemas/PaginationLinks'
    NewAdoption:
      type: object
      properties:
        pets:
          type: array
          description: the pets to be part of this adoption
          items:
            type: string
        location:
          type: string
          pattern: ^.{0,50}$
          description: the location of the pet adoption
    AdoptionStatus:
      type: object
      properties:
        status:
          type: string
          description: the adoption status of the pet
          example: approved
          enum:
            - requested
            - pending
            - available
            - denied
            - approved
    AdoptionReason:
      type: object
      properties:
        petId:
          type: string
          description: the pet id
          example: c76b67cb-7976-4b94-af8e-381688c915ae
        message:
          type: string
          pattern: ^.{0,200}$
          description: >-
            a custom note providing some additional context about the reason for
            adopting the pet
          example: we have the perfect home environment to take great care of Panther
    Link:
      type: object
      description: A link to a resource returned by this API
      required:
        - href
      properties:
        href:
          type: string
          format: url
          description: Absolute URL of the resource
    PaginationLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
    Page:
      type: object
      description: Describes the pagination details for the current result set
      required:
        - number
        - page
      properties:
        number:
          type: integer
          description: The 1-based index of the page
          example: 1
        size:
          type: integer
          description: |
            The maximum number of elements per page. 
            > **Note:** the last page might have fewer elements.
        totalElements:
          type: integer
          format: int64
          description: The total number of elements that were founds
          example: 2
        totalPages:
          type: integer
          format: int64
          description: The total number of pages
          example: 1
    Error:
      type: object
      required:
        - type
        - title
      properties:
        code:
          type: string
          description: An API specific error code
          example: EX400-01
        type:
          type: string
          description: URI describing the error
          example: https://petco.io/apis/errors/ex400-01
        title:
          type: string
          description: A human-friendly short description of the problem
          example: An invalid `query` parameter value was sent from client
        detail:
          type: string
          description: A human-friendly long description of the problem
          example: The value `foo` is not a valid status
        instance:
          type: string
          description: Path on which the operation was performed
          example: /pets
        status:
          type: integer
          description: HTTP-style status code
          example: 400
  parameters:
    page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
      description: >-
        The 1-based index of the page to return. If not specified, the first
        page is returned.
      required: false
      examples:
        pageExample:
          value: 2
          description: >-
            an example page value (requesting the second page from the result
            set)
    pageSize:
      name: size
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 20
      description: The number of results to return per page
      examples:
        pageSize:
          value: 20
          description: an example pageSize
      required: false
  responses:
    BadRequest:
      description: |
        One or more of the required parameters was malformed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: >-
        The petStore is offline either for maintainence or technical issues.
        Please try again later
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            503-Example:
              value:
                code: EX503-01
                type: https://petco.io/apis/errors/ex503-01
                title: The PetCo APIs are currently unavailable
                detail: >-
                  The petStore is offline either for maintainence or technical
                  issues. Please try again later.
                instance: /pets or /adoptions
                status: 503
            503-Mainainence-Window:
              value:
                code: EX503-02
                type: https://petco.io/apis/errors/ex503-02
                title: The PetCo APIs are currently offline for maintenance
                detail: >-
                  The petStore is offline for maintainence or technical issues.
                  The service will be back online at 08:00 AM
                instance: /pets or /adoptions
                status: 503
    GetPetServiceUnavailable:
      description: >-
        The petStore is offline either for maintainence or technical issues.
        Please try again later
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            503-Example:
              value:
                code: EX503-03
                type: https://petco.io/apis/errors/ex503-03
                title: The PetCo APIs are currently unavailable
                detail: >-
                  The petStore is offline either for maintainence or technical
                  issues. Please try again later.
                instance: /pets/{petid}
                status: 503
            503-Mainainence-Window:
              value:
                code: EX503-04
                type: https://petco.io/apis/errors/ex503-04
                title: The PetCo APIs are currently offline for maintenance
                detail: >-
                  The petStore is offline for maintainence or technical issues.
                  The service will be back online at 08:00 AM
                instance: /pets/{petid}
                status: 503
    NotFound:
      description: The requested resource was not found within our catalog
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            404-Example:
              value:
                code: EX404-01
                type: https://petco.io/apis/errors/ex404-01
                title: Resource not found
                detail: >-
                  The requested pet resource does not exist within our catalog.
                  Please review your pet id value
                status: 404
    Unauthorized:
      description: The request provided in unauthorized to access the requested resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            401-Example:
              value:
                code: EX401-01
                type: https://petco.io/apis/errors/ex401-01
                title: Request unauthorized
                detail: >-
                  The request provided is unauthorized. Please review your auth
                  token
                status: 401
  securitySchemes:
    PetCoToken:
      type: http
      scheme: bearer
      description: |
        Specify your PetCo API Key found in
         https://petsco.io/settings/apiKey after you've authenticated to the PetCo web portal
         
        The applicable scopes are:

         * registered - A registered user

         * guest - A read-only user

         * administrator
