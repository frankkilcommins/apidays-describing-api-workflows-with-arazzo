arazzo: 1.0.0
info:
  title: BNPL Loan Application Workflow
  description: >
    This workflow facilitates the process of applying for a Buy Now, Pay Later (BNPL) loan, integrating multiple steps from product eligibility checks to loan authorization and order status updates.
sourceDescriptions:
  - name: BNPL-Eligibility-And-Auth
    url: https://api.swaggerhub.com/apis/smartbear-api-hub/BNPL-Eligibility-And-Auth/1.0.0/swagger.json
    type: openapi
  - name: BNPL-Loans
    url: https://api.swaggerhub.com/apis/smartbear-api-hub/BNPL-Loans/1.0.0/swagger.json
    type: openapi
workflows:
  - workflowId: BNPLLoanApplication
    summary: BNPL Loan Application Process
    description: >
      This workflow orchestrates the end-to-end process for applying for a BNPL loan, ensuring seamless integration between product eligibility verification, customer authentication, loan initiation, and order fulfillment.
    inputs:
      type: object
      required:
        - customer
        - products
      properties:
        customer:
          description: >
            Customer details or a reference to an existing customer record.
          oneOf:
            - type: object
              required:
                - firstName
                - lastName
                - dateOfBirth
                - postalCode
              properties:
                firstName:
                  type: string
                  description: First name of the customer
                lastName:
                  type: string
                  description: Last name of the customer
                dateOfBirth:
                  type: string
                  format: date
                  description: Date of birth of the customer
                postalCode:
                  type: string
                  description: Postal code of the customer
            - type: object
              required:
                - customerId
              properties:
                customerId:
                  type: string
                  description: Unique identifier for an existing customer
        products:
          type: array
          items:
            type: object
            required:
              - productCode
              - purchaseAmount
            properties:
              productCode:
                type: string
                description: Code identifying the product
              purchaseAmount:
                type: object
                required:
                  - currency
                  - amount
                properties:
                  currency:
                    type: string
                    description: Currency code (e.g., USD)
                  amount:
                    type: number
                    description: Purchase amount of the product
    steps:
      - stepId: checkProductEligibility
        description: >
          Verify if the selected products are eligible for BNPL.
        operationId: checkProductEligibility
        requestBody:
          contentType: application/json
          payload: >
            {
              "products": "{$inputs.products}"
            }
        successCriteria:
          - condition: $statusCode == 200
        onSuccess:
          - name: productsEligible
            type: continue
            criteria:
              - condition: $response.body#/eligible == true
          - name: productsNotEligible
            type: end
            criteria:
              - condition: $response.body#/eligible == false
        outputs:
          eligibleProducts: $response.body#/eligibleProducts
      - stepId: retrieveTermsAndConditions
        description: >
          Retrieve the Terms and Conditions for BNPL and determine customer eligibility.
        operationId: getTermsAndConditions
        successCriteria:
          - condition: $statusCode == 200
        outputs:
          termsAndConditions: $response.body#/termsAndConditions
      - stepId: createCustomerRecord
        description: >
          Create a new customer record if the customer is not already registered.
        operationId: createCustomer
        requestBody:
          contentType: application/json
          payload: >
            {
              "firstName": "{$inputs.customer.firstName}",
              "lastName": "{$inputs.customer.lastName}",
              "dateOfBirth": "{$inputs.customer.dateOfBirth}",
              "postalCode": "{$inputs.customer.postalCode}"
            }
        successCriteria:
          - condition: $statusCode == 201
        onSuccess:
          - name: customerCreated
            type: continue
            criteria:
              - condition: $statusCode == 201
        outputs:
          customerId: $response.body#/customerId
      - stepId: initiateLoanTransaction
        description: >
          Initiate the BNPL loan transaction with the eligible products and customer information.
        operationId: initiateLoan
        requestBody:
          contentType: application/json
          payload: >
            {
              "customerId": "{$steps.createCustomerRecord.outputs.customerId}",
              "products": "{$steps.checkProductEligibility.outputs.eligibleProducts}"
            }
        successCriteria:
          - condition: $statusCode == 202
        outputs:
          loanTransactionId: $response.body#/loanTransactionId
      - stepId: authenticateCustomer
        description: >
          Authenticate the customer and obtain authorization for the loan.
        operationId: authenticate
        parameters:
          - name: loanTransactionId
            in: query
            value: $steps.initiateLoanTransaction.outputs.loanTransactionId
        successCriteria:
          - condition: $statusCode == 200
        outputs:
          authorizationToken: $response.body#/authorizationToken
      - stepId: retrievePaymentPlan
        description: >
          Calculate and retrieve the payment plan to display within the client application.
        operationId: getPaymentPlan
        parameters:
          - name: loanTransactionId
            in: path
            value: $steps.initiateLoanTransaction.outputs.loanTransactionId
        successCriteria:
          - condition: $statusCode == 200
        outputs:
          paymentPlan: $response.body#/paymentPlan
      - stepId: updateOrderStatus
        description: >
          Update the order status to reflect the current state of the loan application.
        operationId: updateOrder
        requestBody:
          contentType: application/json
          payload: >
            {
              "loanTransactionId": "{$steps.initiateLoanTransaction.outputs.loanTransactionId}",
              "status": "Completed"
            }
        successCriteria:
          - condition: $statusCode == 204
    outputs:
      finalPaymentPlan: $steps.retrievePaymentPlan.outputs.paymentPlan
